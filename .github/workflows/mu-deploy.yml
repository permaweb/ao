name: "mu-production-deploy"

concurrency:
  group: mu-production-deploy-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:

jobs:
  deploy-mu:
    runs-on: ubuntu-latest
    env:
      ACCOUNT_ID: 429478883069
      AWS_REGION: us-west-1
      ECR_REGISTRY: 429478883069.dkr.ecr.us-west-1.amazonaws.com
      ECR_IMAGE_NAME: mu-ecr
      ECS_CLUSTER: mu-cluster
      ECS_SERVICE: mu-service
      ECS_TASK: mu
      IMAGE_NAME: mu
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_AO_PROD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_AO_PROD }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Build and push the tagged docker image to Amazon ECR
        id: build-image
        working-directory: servers/mu
        run: |
          aws ecr get-login-password | docker login --username AWS --password-stdin $ECR_REGISTRY
          docker build -t ${{ env.ECR_REGISTRY }}/${{ env.ECR_IMAGE_NAME }}:$GITHUB_SHA .
          docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_IMAGE_NAME }}:$GITHUB_SHA
          echo "image=${{ env.ECR_REGISTRY }}/${{ env.ECR_IMAGE_NAME }}:$GITHUB_SHA" >> $GITHUB_OUTPUT

      - name: Download task definition
        run: |
          AWS_REGION=${{ env.AWS_REGION }} \
          aws ecs describe-task-definition \
            --task-definition ${{ env.ECS_TASK }} \
            --query taskDefinition > task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def-upload
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{ env.IMAGE_NAME }}-task-definition
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy to ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def-upload.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}

      - name: Deploy ECS task
        run: |
          aws ecs update-service --cluster ${{ env.ECS_CLUSTER }} --service ${{ env.ECS_SERVICE }}
          aws ssm put-parameter \
            --name mu-ecr-image-revision \
            --value $GITHUB_SHA \
            --overwrite
          aws ecs wait services-stable --cluster ${{ env.ECS_CLUSTER }} --service ${{ env.ECS_SERVICE }}
